<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>task_numa_work (512 samples, 0.01%)</title><rect x="1160.9" y="149" width="0.2" height="15.0" fill="rgb(207,118,30)" rx="2" ry="2" />
<text  x="1163.94" y="159.5" ></text>
</g>
<g >
<title>do_page_fault (1,445 samples, 0.04%)</title><rect x="489.2" y="213" width="0.5" height="15.0" fill="rgb(233,177,28)" rx="2" ry="2" />
<text  x="492.18" y="223.5" ></text>
</g>
<g >
<title>retint_user (770 samples, 0.02%)</title><rect x="364.5" y="245" width="0.3" height="15.0" fill="rgb(218,113,3)" rx="2" ry="2" />
<text  x="367.54" y="255.5" ></text>
</g>
<g >
<title>task_numa_work (728 samples, 0.02%)</title><rect x="1048.2" y="165" width="0.2" height="15.0" fill="rgb(215,42,3)" rx="2" ry="2" />
<text  x="1051.21" y="175.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (799 samples, 0.02%)</title><rect x="1048.2" y="213" width="0.2" height="15.0" fill="rgb(230,204,4)" rx="2" ry="2" />
<text  x="1051.18" y="223.5" ></text>
</g>
<g >
<title>change_protection_range (2,078 samples, 0.06%)</title><rect x="875.2" y="117" width="0.7" height="15.0" fill="rgb(243,20,38)" rx="2" ry="2" />
<text  x="878.19" y="127.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (994 samples, 0.03%)</title><rect x="189.8" y="245" width="0.3" height="15.0" fill="rgb(238,215,10)" rx="2" ry="2" />
<text  x="192.81" y="255.5" ></text>
</g>
<g >
<title>retint_user (320 samples, 0.01%)</title><rect x="16.7" y="245" width="0.1" height="15.0" fill="rgb(224,59,26)" rx="2" ry="2" />
<text  x="19.73" y="255.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1,779 samples, 0.05%)</title><rect x="871.1" y="197" width="0.6" height="15.0" fill="rgb(223,111,30)" rx="2" ry="2" />
<text  x="874.13" y="207.5" ></text>
</g>
<g >
<title>change_protection (726 samples, 0.02%)</title><rect x="1048.2" y="133" width="0.2" height="15.0" fill="rgb(207,82,5)" rx="2" ry="2" />
<text  x="1051.21" y="143.5" ></text>
</g>
<g >
<title>finish_task_switch (314 samples, 0.01%)</title><rect x="364.1" y="133" width="0.1" height="15.0" fill="rgb(217,156,39)" rx="2" ry="2" />
<text  x="367.14" y="143.5" ></text>
</g>
<g >
<title>[libc-2.23.so] (28,665 samples, 0.80%)</title><rect x="192.7" y="261" width="9.5" height="15.0" fill="rgb(231,83,2)" rx="2" ry="2" />
<text  x="195.70" y="271.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (664 samples, 0.02%)</title><rect x="1084.1" y="213" width="0.3" height="15.0" fill="rgb(229,28,10)" rx="2" ry="2" />
<text  x="1087.13" y="223.5" ></text>
</g>
<g >
<title>LightGBM::DenseBin&lt;unsigned char, false&gt;::Split (15,362 samples, 0.43%)</title><rect x="20.2" y="261" width="5.1" height="15.0" fill="rgb(214,50,39)" rx="2" ry="2" />
<text  x="23.24" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (405 samples, 0.01%)</title><rect x="1048.0" y="181" width="0.1" height="15.0" fill="rgb(216,100,2)" rx="2" ry="2" />
<text  x="1051.00" y="191.5" ></text>
</g>
<g >
<title>LightGBM::DenseBinIterator&lt;unsigned char, true&gt;::Get (305 samples, 0.01%)</title><rect x="1084.0" y="229" width="0.1" height="15.0" fill="rgb(249,7,5)" rx="2" ry="2" />
<text  x="1087.00" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (948 samples, 0.03%)</title><rect x="958.2" y="197" width="0.3" height="15.0" fill="rgb(229,195,47)" rx="2" ry="2" />
<text  x="961.19" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (391 samples, 0.01%)</title><rect x="1160.5" y="149" width="0.1" height="15.0" fill="rgb(207,92,22)" rx="2" ry="2" />
<text  x="1163.49" y="159.5" ></text>
</g>
<g >
<title>handle_mm_fault (6,828 samples, 0.19%)</title><rect x="470.3" y="181" width="2.3" height="15.0" fill="rgb(217,80,32)" rx="2" ry="2" />
<text  x="473.31" y="191.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (544 samples, 0.02%)</title><rect x="467.1" y="213" width="0.2" height="15.0" fill="rgb(250,183,33)" rx="2" ry="2" />
<text  x="470.12" y="223.5" ></text>
</g>
<g >
<title>change_protection_range (331 samples, 0.01%)</title><rect x="900.1" y="117" width="0.1" height="15.0" fill="rgb(213,116,52)" rx="2" ry="2" />
<text  x="903.07" y="127.5" ></text>
</g>
<g >
<title>LightGBM::MultiValBinWrapper::HistMerge (36,072 samples, 1.01%)</title><rect x="30.1" y="261" width="11.9" height="15.0" fill="rgb(227,208,46)" rx="2" ry="2" />
<text  x="33.12" y="271.5" ></text>
</g>
<g >
<title>change_protection (512 samples, 0.01%)</title><rect x="1160.9" y="117" width="0.2" height="15.0" fill="rgb(217,172,4)" rx="2" ry="2" />
<text  x="1163.94" y="127.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (570 samples, 0.02%)</title><rect x="475.4" y="197" width="0.2" height="15.0" fill="rgb(242,87,44)" rx="2" ry="2" />
<text  x="478.37" y="207.5" ></text>
</g>
<g >
<title>error_entry (1,050 samples, 0.03%)</title><rect x="467.3" y="229" width="0.4" height="15.0" fill="rgb(206,95,24)" rx="2" ry="2" />
<text  x="470.30" y="239.5" ></text>
</g>
<g >
<title>up_read (597 samples, 0.02%)</title><rect x="899.6" y="181" width="0.2" height="15.0" fill="rgb(250,201,25)" rx="2" ry="2" />
<text  x="902.57" y="191.5" ></text>
</g>
<g >
<title>[python3.7] (334 samples, 0.01%)</title><rect x="1078.3" y="245" width="0.1" height="15.0" fill="rgb(217,101,17)" rx="2" ry="2" />
<text  x="1081.34" y="255.5" ></text>
</g>
<g >
<title>page_fault (4,511 samples, 0.13%)</title><rect x="872.3" y="229" width="1.5" height="15.0" fill="rgb(205,227,40)" rx="2" ry="2" />
<text  x="875.26" y="239.5" ></text>
</g>
<g >
<title>down_read_trylock (460 samples, 0.01%)</title><rect x="489.2" y="181" width="0.2" height="15.0" fill="rgb(223,93,35)" rx="2" ry="2" />
<text  x="492.21" y="191.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (313 samples, 0.01%)</title><rect x="364.1" y="117" width="0.1" height="15.0" fill="rgb(231,53,39)" rx="2" ry="2" />
<text  x="367.14" y="127.5" ></text>
</g>
<g >
<title>LightGBM::SparseBin&lt;unsigned char&gt;::Split (172,420 samples, 4.83%)</title><rect x="901.8" y="245" width="57.0" height="15.0" fill="rgb(240,38,46)" rx="2" ry="2" />
<text  x="904.83" y="255.5" >LightG..</text>
</g>
<g >
<title>prepare_exit_to_usermode (819 samples, 0.02%)</title><rect x="1160.8" y="197" width="0.3" height="15.0" fill="rgb(234,130,43)" rx="2" ry="2" />
<text  x="1163.84" y="207.5" ></text>
</g>
<g >
<title>[unknown] (3,504 samples, 0.10%)</title><rect x="869.9" y="229" width="1.1" height="15.0" fill="rgb(233,158,0)" rx="2" ry="2" />
<text  x="872.86" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_fastpath (418 samples, 0.01%)</title><rect x="364.1" y="245" width="0.2" height="15.0" fill="rgb(221,59,15)" rx="2" ry="2" />
<text  x="367.13" y="255.5" ></text>
</g>
<g >
<title>change_protection_range (502 samples, 0.01%)</title><rect x="1160.9" y="101" width="0.2" height="15.0" fill="rgb(234,118,14)" rx="2" ry="2" />
<text  x="1163.94" y="111.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (554 samples, 0.02%)</title><rect x="386.6" y="229" width="0.2" height="15.0" fill="rgb(247,17,6)" rx="2" ry="2" />
<text  x="389.64" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (427 samples, 0.01%)</title><rect x="467.1" y="165" width="0.2" height="15.0" fill="rgb(224,192,44)" rx="2" ry="2" />
<text  x="470.15" y="175.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (22,713 samples, 0.64%)</title><rect x="1175.6" y="229" width="7.5" height="15.0" fill="rgb(243,92,18)" rx="2" ry="2" />
<text  x="1178.56" y="239.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (3,220 samples, 0.09%)</title><rect x="474.5" y="213" width="1.1" height="15.0" fill="rgb(208,179,36)" rx="2" ry="2" />
<text  x="477.49" y="223.5" ></text>
</g>
<g >
<title>task_work_run (2,119 samples, 0.06%)</title><rect x="875.2" y="181" width="0.7" height="15.0" fill="rgb(231,229,14)" rx="2" ry="2" />
<text  x="878.18" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.14 (330 samples, 0.01%)</title><rect x="1048.0" y="133" width="0.1" height="15.0" fill="rgb(235,15,44)" rx="2" ry="2" />
<text  x="1051.02" y="143.5" ></text>
</g>
<g >
<title>LightGBM::SerialTreeLearner::FindBestSplits (534 samples, 0.01%)</title><rect x="901.4" y="197" width="0.2" height="15.0" fill="rgb(254,152,34)" rx="2" ry="2" />
<text  x="904.39" y="207.5" ></text>
</g>
<g >
<title>LightGBM::LeafSplits::Init (6,906 samples, 0.19%)</title><rect x="27.8" y="261" width="2.3" height="15.0" fill="rgb(234,48,14)" rx="2" ry="2" />
<text  x="30.79" y="271.5" ></text>
</g>
<g >
<title>LightGBM::MultiValSparseBin&lt;unsigned long, unsigned short&gt;::ConstructHistogram (1,047,141 samples, 29.33%)</title><rect x="529.8" y="245" width="346.1" height="15.0" fill="rgb(243,168,33)" rx="2" ry="2" />
<text  x="532.80" y="255.5" >LightGBM::MultiValSparseBin&lt;unsigned long, uns..</text>
</g>
<g >
<title>prepare_exit_to_usermode (2,626 samples, 0.07%)</title><rect x="191.7" y="229" width="0.9" height="15.0" fill="rgb(244,191,9)" rx="2" ry="2" />
<text  x="194.73" y="239.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (371 samples, 0.01%)</title><rect x="958.7" y="197" width="0.1" height="15.0" fill="rgb(230,47,52)" rx="2" ry="2" />
<text  x="961.69" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (507 samples, 0.01%)</title><rect x="363.9" y="181" width="0.2" height="15.0" fill="rgb(205,48,6)" rx="2" ry="2" />
<text  x="366.91" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,608 samples, 0.05%)</title><rect x="871.1" y="165" width="0.6" height="15.0" fill="rgb(212,25,17)" rx="2" ry="2" />
<text  x="874.14" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,762 samples, 0.05%)</title><rect x="871.1" y="181" width="0.6" height="15.0" fill="rgb(215,206,13)" rx="2" ry="2" />
<text  x="874.14" y="191.5" ></text>
</g>
<g >
<title>[libc-2.23.so] (322 samples, 0.01%)</title><rect x="901.3" y="213" width="0.1" height="15.0" fill="rgb(220,182,44)" rx="2" ry="2" />
<text  x="904.28" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (466 samples, 0.01%)</title><rect x="363.9" y="165" width="0.2" height="15.0" fill="rgb(219,168,45)" rx="2" ry="2" />
<text  x="366.93" y="175.5" ></text>
</g>
<g >
<title>futex_wait (373 samples, 0.01%)</title><rect x="364.1" y="197" width="0.2" height="15.0" fill="rgb(226,97,14)" rx="2" ry="2" />
<text  x="367.13" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,853 samples, 0.05%)</title><rect x="190.8" y="197" width="0.6" height="15.0" fill="rgb(210,80,28)" rx="2" ry="2" />
<text  x="193.76" y="207.5" ></text>
</g>
<g >
<title>vmacache_find (878 samples, 0.02%)</title><rect x="473.8" y="181" width="0.3" height="15.0" fill="rgb(209,60,36)" rx="2" ry="2" />
<text  x="476.84" y="191.5" ></text>
</g>
<g >
<title>page_fault (360 samples, 0.01%)</title><rect x="1160.7" y="213" width="0.1" height="15.0" fill="rgb(250,56,16)" rx="2" ry="2" />
<text  x="1163.67" y="223.5" ></text>
</g>
<g >
<title>task_numa_work (2,118 samples, 0.06%)</title><rect x="875.2" y="165" width="0.7" height="15.0" fill="rgb(233,69,23)" rx="2" ry="2" />
<text  x="878.18" y="175.5" ></text>
</g>
<g >
<title>@plt (747 samples, 0.02%)</title><rect x="10.0" y="261" width="0.2" height="15.0" fill="rgb(219,31,38)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>retint_user (319 samples, 0.01%)</title><rect x="1078.2" y="229" width="0.1" height="15.0" fill="rgb(215,83,41)" rx="2" ry="2" />
<text  x="1081.22" y="239.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (758 samples, 0.02%)</title><rect x="364.5" y="229" width="0.3" height="15.0" fill="rgb(237,129,51)" rx="2" ry="2" />
<text  x="367.54" y="239.5" ></text>
</g>
<g >
<title>task_work_run (546 samples, 0.02%)</title><rect x="364.6" y="197" width="0.2" height="15.0" fill="rgb(220,99,49)" rx="2" ry="2" />
<text  x="367.61" y="207.5" ></text>
</g>
<g >
<title>error_entry (878 samples, 0.02%)</title><rect x="190.1" y="245" width="0.3" height="15.0" fill="rgb(251,66,15)" rx="2" ry="2" />
<text  x="193.14" y="255.5" ></text>
</g>
<g >
<title>LightGBM::Common::ParallelSort&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, LightGBM::AUCMetric::Eval (5,141 samples, 0.14%)</title><rect x="16.8" y="261" width="1.7" height="15.0" fill="rgb(215,168,0)" rx="2" ry="2" />
<text  x="19.83" y="271.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (535 samples, 0.01%)</title><rect x="900.2" y="229" width="0.2" height="15.0" fill="rgb(252,9,3)" rx="2" ry="2" />
<text  x="903.21" y="239.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (307 samples, 0.01%)</title><rect x="1078.2" y="197" width="0.1" height="15.0" fill="rgb(233,9,49)" rx="2" ry="2" />
<text  x="1081.22" y="207.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (313 samples, 0.01%)</title><rect x="1078.2" y="213" width="0.1" height="15.0" fill="rgb(232,2,12)" rx="2" ry="2" />
<text  x="1081.22" y="223.5" ></text>
</g>
<g >
<title>LightGBM::DenseBin&lt;unsigned short, false&gt;::Split (7,308 samples, 0.20%)</title><rect x="25.3" y="261" width="2.4" height="15.0" fill="rgb(237,197,5)" rx="2" ry="2" />
<text  x="28.33" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (336 samples, 0.01%)</title><rect x="1160.7" y="197" width="0.1" height="15.0" fill="rgb(234,0,34)" rx="2" ry="2" />
<text  x="1163.68" y="207.5" ></text>
</g>
<g >
<title>LightGBM::MultiValSparseBin&lt;unsigned long, unsigned short&gt;::ConstructHistogram (455,519 samples, 12.76%)</title><rect x="42.0" y="261" width="150.6" height="15.0" fill="rgb(245,73,30)" rx="2" ry="2" />
<text  x="45.04" y="271.5" >LightGBM::MultiValS..</text>
</g>
<g >
<title>page_fault (1,196 samples, 0.03%)</title><rect x="529.1" y="229" width="0.4" height="15.0" fill="rgb(214,101,35)" rx="2" ry="2" />
<text  x="532.11" y="239.5" ></text>
</g>
<g >
<title>task_work_run (348 samples, 0.01%)</title><rect x="958.7" y="181" width="0.1" height="15.0" fill="rgb(252,200,42)" rx="2" ry="2" />
<text  x="961.70" y="191.5" ></text>
</g>
<g >
<title>update_process_times (379 samples, 0.01%)</title><rect x="467.2" y="117" width="0.1" height="15.0" fill="rgb(214,133,34)" rx="2" ry="2" />
<text  x="470.17" y="127.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (676 samples, 0.02%)</title><rect x="363.9" y="229" width="0.2" height="15.0" fill="rgb(222,129,50)" rx="2" ry="2" />
<text  x="366.88" y="239.5" ></text>
</g>
<g >
<title>change_protection_range (719 samples, 0.02%)</title><rect x="1048.2" y="117" width="0.2" height="15.0" fill="rgb(238,34,16)" rx="2" ry="2" />
<text  x="1051.21" y="127.5" ></text>
</g>
<g >
<title>change_prot_numa (726 samples, 0.02%)</title><rect x="1048.2" y="149" width="0.2" height="15.0" fill="rgb(235,39,16)" rx="2" ry="2" />
<text  x="1051.21" y="159.5" ></text>
</g>
<g >
<title>do_page_fault (5,597 samples, 0.16%)</title><rect x="898.0" y="213" width="1.8" height="15.0" fill="rgb(241,9,51)" rx="2" ry="2" />
<text  x="900.96" y="223.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2,283 samples, 0.06%)</title><rect x="875.1" y="197" width="0.8" height="15.0" fill="rgb(242,111,48)" rx="2" ry="2" />
<text  x="878.13" y="207.5" ></text>
</g>
<g >
<title>error_entry (1,324 samples, 0.04%)</title><rect x="871.7" y="229" width="0.5" height="15.0" fill="rgb(213,66,21)" rx="2" ry="2" />
<text  x="874.73" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (395 samples, 0.01%)</title><rect x="467.2" y="149" width="0.1" height="15.0" fill="rgb(228,182,23)" rx="2" ry="2" />
<text  x="470.16" y="159.5" ></text>
</g>
<g >
<title>retint_user (639 samples, 0.02%)</title><rect x="529.5" y="229" width="0.2" height="15.0" fill="rgb(241,5,3)" rx="2" ry="2" />
<text  x="532.51" y="239.5" ></text>
</g>
<g >
<title>LightGBM::SerialTreeLearner::FindBestSplitsFromHistograms (1,259 samples, 0.04%)</title><rect x="900.9" y="213" width="0.4" height="15.0" fill="rgb(244,102,17)" rx="2" ry="2" />
<text  x="903.86" y="223.5" ></text>
</g>
<g >
<title>task_tick_fair (740 samples, 0.02%)</title><rect x="871.4" y="85" width="0.2" height="15.0" fill="rgb(217,192,17)" rx="2" ry="2" />
<text  x="874.38" y="95.5" ></text>
</g>
<g >
<title>[libc-2.23.so] (542 samples, 0.02%)</title><rect x="1173.6" y="229" width="0.1" height="15.0" fill="rgb(246,216,36)" rx="2" ry="2" />
<text  x="1176.57" y="239.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, long, LightGBM::AUCMetric::Eval (7,865 samples, 0.22%)</title><rect x="1185.2" y="245" width="2.6" height="15.0" fill="rgb(229,80,6)" rx="2" ry="2" />
<text  x="1188.22" y="255.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5,005 samples, 0.14%)</title><rect x="874.2" y="213" width="1.7" height="15.0" fill="rgb(205,77,18)" rx="2" ry="2" />
<text  x="877.23" y="223.5" ></text>
</g>
<g >
<title>LightGBM::DenseBinIterator&lt;unsigned char, false&gt;::Get (11,272 samples, 0.32%)</title><rect x="1080.3" y="229" width="3.7" height="15.0" fill="rgb(219,49,0)" rx="2" ry="2" />
<text  x="1083.27" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (772 samples, 0.02%)</title><rect x="1189.7" y="261" width="0.2" height="15.0" fill="rgb(233,154,33)" rx="2" ry="2" />
<text  x="1192.68" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (369 samples, 0.01%)</title><rect x="1048.0" y="165" width="0.1" height="15.0" fill="rgb(234,115,0)" rx="2" ry="2" />
<text  x="1051.00" y="175.5" ></text>
</g>
<g >
<title>tick_sched_timer (364 samples, 0.01%)</title><rect x="1160.5" y="133" width="0.1" height="15.0" fill="rgb(229,138,28)" rx="2" ry="2" />
<text  x="1163.50" y="143.5" ></text>
</g>
<g >
<title>change_protection (537 samples, 0.02%)</title><rect x="475.4" y="133" width="0.2" height="15.0" fill="rgb(239,150,19)" rx="2" ry="2" />
<text  x="478.38" y="143.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (717 samples, 0.02%)</title><rect x="364.6" y="213" width="0.2" height="15.0" fill="rgb(248,80,52)" rx="2" ry="2" />
<text  x="367.56" y="223.5" ></text>
</g>
<g >
<title>LightGBM::Common::ParallelSort&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, LightGBM::AUCMetric::Eval (1,965 samples, 0.06%)</title><rect x="386.0" y="245" width="0.6" height="15.0" fill="rgb(206,219,0)" rx="2" ry="2" />
<text  x="388.99" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (436 samples, 0.01%)</title><rect x="1160.5" y="165" width="0.1" height="15.0" fill="rgb(246,74,21)" rx="2" ry="2" />
<text  x="1163.48" y="175.5" ></text>
</g>
<g >
<title>tick_sched_timer (643 samples, 0.02%)</title><rect x="189.9" y="165" width="0.2" height="15.0" fill="rgb(213,28,6)" rx="2" ry="2" />
<text  x="192.90" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1,966 samples, 0.06%)</title><rect x="189.2" y="245" width="0.6" height="15.0" fill="rgb(247,173,4)" rx="2" ry="2" />
<text  x="192.16" y="255.5" ></text>
</g>
<g >
<title>LightGBM::DataPartition::Split (562 samples, 0.02%)</title><rect x="386.6" y="245" width="0.2" height="15.0" fill="rgb(241,205,11)" rx="2" ry="2" />
<text  x="389.64" y="255.5" ></text>
</g>
<g >
<title>do_page_fault (356 samples, 0.01%)</title><rect x="976.0" y="213" width="0.1" height="15.0" fill="rgb(241,125,21)" rx="2" ry="2" />
<text  x="979.00" y="223.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (492,030 samples, 13.78%)</title><rect x="202.2" y="261" width="162.6" height="15.0" fill="rgb(214,43,17)" rx="2" ry="2" />
<text  x="205.18" y="271.5" >[libgomp.so.1.0.0]</text>
</g>
<g >
<title>apic_timer_interrupt (568 samples, 0.02%)</title><rect x="467.1" y="229" width="0.2" height="15.0" fill="rgb(221,140,40)" rx="2" ry="2" />
<text  x="470.11" y="239.5" ></text>
</g>
<g >
<title>do_page_fault (1,173 samples, 0.03%)</title><rect x="529.1" y="213" width="0.4" height="15.0" fill="rgb(212,121,19)" rx="2" ry="2" />
<text  x="532.12" y="223.5" ></text>
</g>
<g >
<title>update_process_times (1,391 samples, 0.04%)</title><rect x="871.2" y="117" width="0.5" height="15.0" fill="rgb(240,124,22)" rx="2" ry="2" />
<text  x="874.21" y="127.5" ></text>
</g>
<g >
<title>change_protection_range (532 samples, 0.01%)</title><rect x="364.6" y="133" width="0.2" height="15.0" fill="rgb(216,172,27)" rx="2" ry="2" />
<text  x="367.61" y="143.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.14 (1,407 samples, 0.04%)</title><rect x="871.2" y="133" width="0.5" height="15.0" fill="rgb(211,165,32)" rx="2" ry="2" />
<text  x="874.21" y="143.5" ></text>
</g>
<g >
<title>LightGBM::AUCMetric::Eval (1,454 samples, 0.04%)</title><rect x="10.2" y="261" width="0.5" height="15.0" fill="rgb(206,200,4)" rx="2" ry="2" />
<text  x="13.25" y="271.5" ></text>
</g>
<g >
<title>LightGBM::SerialTreeLearner::AddPredictionToScore (73,237 samples, 2.05%)</title><rect x="876.0" y="245" width="24.2" height="15.0" fill="rgb(242,182,31)" rx="2" ry="2" />
<text  x="878.97" y="255.5" >L..</text>
</g>
<g >
<title>tick_sched_handle.isra.14 (383 samples, 0.01%)</title><rect x="467.2" y="133" width="0.1" height="15.0" fill="rgb(214,164,23)" rx="2" ry="2" />
<text  x="470.16" y="143.5" ></text>
</g>
<g >
<title>__do_page_fault (2,848 samples, 0.08%)</title><rect x="190.5" y="213" width="1.0" height="15.0" fill="rgb(236,114,38)" rx="2" ry="2" />
<text  x="193.52" y="223.5" ></text>
</g>
<g >
<title>task_numa_work (539 samples, 0.02%)</title><rect x="475.4" y="165" width="0.2" height="15.0" fill="rgb(231,180,19)" rx="2" ry="2" />
<text  x="478.38" y="175.5" ></text>
</g>
<g >
<title>do_page_fault (423 samples, 0.01%)</title><rect x="20.1" y="229" width="0.1" height="15.0" fill="rgb(245,39,54)" rx="2" ry="2" />
<text  x="23.08" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (448 samples, 0.01%)</title><rect x="190.0" y="117" width="0.1" height="15.0" fill="rgb(218,140,34)" rx="2" ry="2" />
<text  x="192.97" y="127.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (510 samples, 0.01%)</title><rect x="1048.0" y="229" width="0.1" height="15.0" fill="rgb(212,31,13)" rx="2" ry="2" />
<text  x="1050.97" y="239.5" ></text>
</g>
<g >
<title>retint_user (4,183 samples, 0.12%)</title><rect x="474.2" y="229" width="1.4" height="15.0" fill="rgb(222,99,34)" rx="2" ry="2" />
<text  x="477.18" y="239.5" ></text>
</g>
<g >
<title>page_fault (366 samples, 0.01%)</title><rect x="976.0" y="229" width="0.1" height="15.0" fill="rgb(219,90,10)" rx="2" ry="2" />
<text  x="979.00" y="239.5" ></text>
</g>
<g >
<title>change_protection (946 samples, 0.03%)</title><rect x="192.3" y="149" width="0.3" height="15.0" fill="rgb(250,116,20)" rx="2" ry="2" />
<text  x="195.28" y="159.5" ></text>
</g>
<g >
<title>put_page (311 samples, 0.01%)</title><rect x="472.4" y="165" width="0.1" height="15.0" fill="rgb(244,197,41)" rx="2" ry="2" />
<text  x="475.36" y="175.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1,372 samples, 0.04%)</title><rect x="1189.2" y="261" width="0.5" height="15.0" fill="rgb(206,200,0)" rx="2" ry="2" />
<text  x="1192.22" y="271.5" ></text>
</g>
<g >
<title>[unknown] (384 samples, 0.01%)</title><rect x="1173.6" y="213" width="0.1" height="15.0" fill="rgb(221,18,14)" rx="2" ry="2" />
<text  x="1176.61" y="223.5" ></text>
</g>
<g >
<title>retint_user (921 samples, 0.03%)</title><rect x="1160.8" y="213" width="0.3" height="15.0" fill="rgb(249,82,43)" rx="2" ry="2" />
<text  x="1163.80" y="223.5" ></text>
</g>
<g >
<title>all (3,570,275 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(212,39,12)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>__do_page_fault (4,248 samples, 0.12%)</title><rect x="872.3" y="197" width="1.4" height="15.0" fill="rgb(222,219,22)" rx="2" ry="2" />
<text  x="875.33" y="207.5" ></text>
</g>
<g >
<title>update_process_times (329 samples, 0.01%)</title><rect x="1048.0" y="117" width="0.1" height="15.0" fill="rgb(214,14,3)" rx="2" ry="2" />
<text  x="1051.02" y="127.5" ></text>
</g>
<g >
<title>handle_mm_fault (442 samples, 0.01%)</title><rect x="529.3" y="181" width="0.1" height="15.0" fill="rgb(239,25,31)" rx="2" ry="2" />
<text  x="532.26" y="191.5" ></text>
</g>
<g >
<title>change_protection (340 samples, 0.01%)</title><rect x="900.1" y="133" width="0.1" height="15.0" fill="rgb(205,108,2)" rx="2" ry="2" />
<text  x="903.06" y="143.5" ></text>
</g>
<g >
<title>handle_mm_fault (3,864 samples, 0.11%)</title><rect x="898.3" y="181" width="1.3" height="15.0" fill="rgb(235,27,53)" rx="2" ry="2" />
<text  x="901.29" y="191.5" ></text>
</g>
<g >
<title>retint_user (386 samples, 0.01%)</title><rect x="489.7" y="229" width="0.1" height="15.0" fill="rgb(211,14,24)" rx="2" ry="2" />
<text  x="492.66" y="239.5" ></text>
</g>
<g >
<title>change_prot_numa (340 samples, 0.01%)</title><rect x="900.1" y="149" width="0.1" height="15.0" fill="rgb(238,116,24)" rx="2" ry="2" />
<text  x="903.06" y="159.5" ></text>
</g>
<g >
<title>LightGBM::DenseBin&lt;unsigned short, false&gt;::SplitCategorical (115,504 samples, 3.24%)</title><rect x="491.5" y="245" width="38.2" height="15.0" fill="rgb(226,23,42)" rx="2" ry="2" />
<text  x="494.55" y="255.5" >Lig..</text>
</g>
<g >
<title>down_read_trylock (348 samples, 0.01%)</title><rect x="529.1" y="181" width="0.2" height="15.0" fill="rgb(225,106,21)" rx="2" ry="2" />
<text  x="532.15" y="191.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (320 samples, 0.01%)</title><rect x="958.0" y="229" width="0.1" height="15.0" fill="rgb(246,85,12)" rx="2" ry="2" />
<text  x="960.98" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.14 (436 samples, 0.01%)</title><rect x="363.9" y="149" width="0.2" height="15.0" fill="rgb(250,53,32)" rx="2" ry="2" />
<text  x="366.94" y="159.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (580 samples, 0.02%)</title><rect x="363.9" y="213" width="0.2" height="15.0" fill="rgb(208,76,30)" rx="2" ry="2" />
<text  x="366.91" y="223.5" ></text>
</g>
<g >
<title>mpol_misplaced (610 samples, 0.02%)</title><rect x="472.2" y="165" width="0.2" height="15.0" fill="rgb(228,186,32)" rx="2" ry="2" />
<text  x="475.16" y="175.5" ></text>
</g>
<g >
<title>change_protection_range (518 samples, 0.01%)</title><rect x="475.4" y="117" width="0.2" height="15.0" fill="rgb(229,44,30)" rx="2" ry="2" />
<text  x="478.38" y="127.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.14 (347 samples, 0.01%)</title><rect x="1160.5" y="117" width="0.1" height="15.0" fill="rgb(213,114,50)" rx="2" ry="2" />
<text  x="1163.50" y="127.5" ></text>
</g>
<g >
<title>native_write_msr_safe (654 samples, 0.02%)</title><rect x="364.3" y="245" width="0.2" height="15.0" fill="rgb(224,177,37)" rx="2" ry="2" />
<text  x="367.31" y="255.5" ></text>
</g>
<g >
<title>do_page_fault (714 samples, 0.02%)</title><rect x="25.0" y="229" width="0.3" height="15.0" fill="rgb(228,177,22)" rx="2" ry="2" />
<text  x="28.03" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (575 samples, 0.02%)</title><rect x="363.9" y="197" width="0.2" height="15.0" fill="rgb(230,137,54)" rx="2" ry="2" />
<text  x="366.91" y="207.5" ></text>
</g>
<g >
<title>change_prot_numa (537 samples, 0.02%)</title><rect x="475.4" y="149" width="0.2" height="15.0" fill="rgb(228,164,5)" rx="2" ry="2" />
<text  x="478.38" y="159.5" ></text>
</g>
<g >
<title>__do_page_fault (352 samples, 0.01%)</title><rect x="976.0" y="197" width="0.1" height="15.0" fill="rgb(237,0,3)" rx="2" ry="2" />
<text  x="979.00" y="207.5" ></text>
</g>
<g >
<title>LightGBM::MultiValBinWrapper::HistMerge (670 samples, 0.02%)</title><rect x="1084.1" y="229" width="0.3" height="15.0" fill="rgb(205,35,49)" rx="2" ry="2" />
<text  x="1087.13" y="239.5" ></text>
</g>
<g >
<title>retint_user (921 samples, 0.03%)</title><rect x="958.5" y="229" width="0.3" height="15.0" fill="rgb(245,87,24)" rx="2" ry="2" />
<text  x="961.51" y="239.5" ></text>
</g>
<g >
<title>LightGBM::SparseBinIterator&lt;unsigned char&gt;::Get (11,193 samples, 0.31%)</title><rect x="1169.9" y="229" width="3.7" height="15.0" fill="rgb(227,226,47)" rx="2" ry="2" />
<text  x="1172.86" y="239.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2,020 samples, 0.06%)</title><rect x="871.1" y="213" width="0.6" height="15.0" fill="rgb(236,172,16)" rx="2" ry="2" />
<text  x="874.05" y="223.5" ></text>
</g>
<g >
<title>LightGBM::Dataset::FixHistogram (640 samples, 0.02%)</title><rect x="900.5" y="213" width="0.2" height="15.0" fill="rgb(209,135,30)" rx="2" ry="2" />
<text  x="903.49" y="223.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (745 samples, 0.02%)</title><rect x="1048.2" y="197" width="0.2" height="15.0" fill="rgb(232,81,40)" rx="2" ry="2" />
<text  x="1051.20" y="207.5" ></text>
</g>
<g >
<title>do_page_fault (2,899 samples, 0.08%)</title><rect x="190.5" y="229" width="1.0" height="15.0" fill="rgb(231,40,20)" rx="2" ry="2" />
<text  x="193.51" y="239.5" ></text>
</g>
<g >
<title>change_prot_numa (512 samples, 0.01%)</title><rect x="1160.9" y="133" width="0.2" height="15.0" fill="rgb(220,161,41)" rx="2" ry="2" />
<text  x="1163.94" y="143.5" ></text>
</g>
<g >
<title>LightGBM::SparseBin&lt;unsigned char&gt;::SplitCategorical (52,608 samples, 1.47%)</title><rect x="958.8" y="245" width="17.4" height="15.0" fill="rgb(241,161,34)" rx="2" ry="2" />
<text  x="961.81" y="255.5" ></text>
</g>
<g >
<title>down_read_trylock (649 samples, 0.02%)</title><rect x="872.5" y="181" width="0.2" height="15.0" fill="rgb(231,219,18)" rx="2" ry="2" />
<text  x="875.45" y="191.5" ></text>
</g>
<g >
<title>LightGBM::SerialTreeLearner::~SerialTreeLearner (4,140 samples, 0.12%)</title><rect x="900.5" y="245" width="1.3" height="15.0" fill="rgb(229,106,37)" rx="2" ry="2" />
<text  x="903.46" y="255.5" ></text>
</g>
<g >
<title>native_irq_return_iret (4,167 samples, 0.12%)</title><rect x="1183.1" y="245" width="1.4" height="15.0" fill="rgb(205,139,15)" rx="2" ry="2" />
<text  x="1186.11" y="255.5" ></text>
</g>
<g >
<title>LightGBM::DenseBin&lt;unsigned short, false&gt;::SplitCategorical (3,564 samples, 0.10%)</title><rect x="1079.1" y="229" width="1.2" height="15.0" fill="rgb(229,147,3)" rx="2" ry="2" />
<text  x="1082.10" y="239.5" ></text>
</g>
<g >
<title>[unknown] (2,776 samples, 0.08%)</title><rect x="466.2" y="229" width="0.9" height="15.0" fill="rgb(243,48,3)" rx="2" ry="2" />
<text  x="469.20" y="239.5" ></text>
</g>
<g >
<title>LightGBM::DenseBin&lt;unsigned char, false&gt;::Split (268,374 samples, 7.52%)</title><rect x="386.9" y="245" width="88.7" height="15.0" fill="rgb(237,211,52)" rx="2" ry="2" />
<text  x="389.86" y="255.5" >LightGBM::..</text>
</g>
<g >
<title>task_numa_work (948 samples, 0.03%)</title><rect x="192.3" y="181" width="0.3" height="15.0" fill="rgb(234,94,4)" rx="2" ry="2" />
<text  x="195.28" y="191.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.88 (313 samples, 0.01%)</title><rect x="364.1" y="85" width="0.1" height="15.0" fill="rgb(246,24,15)" rx="2" ry="2" />
<text  x="367.14" y="95.5" ></text>
</g>
<g >
<title>scheduler_tick (1,039 samples, 0.03%)</title><rect x="871.3" y="101" width="0.4" height="15.0" fill="rgb(248,113,47)" rx="2" ry="2" />
<text  x="874.33" y="111.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (798 samples, 0.02%)</title><rect x="189.9" y="213" width="0.2" height="15.0" fill="rgb(245,184,50)" rx="2" ry="2" />
<text  x="192.88" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (1,124 samples, 0.03%)</title><rect x="27.3" y="229" width="0.4" height="15.0" fill="rgb(225,165,24)" rx="2" ry="2" />
<text  x="30.30" y="239.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (412 samples, 0.01%)</title><rect x="1048.0" y="197" width="0.1" height="15.0" fill="rgb(210,73,28)" rx="2" ry="2" />
<text  x="1051.00" y="207.5" ></text>
</g>
<g >
<title>[libc-2.23.so] (218,374 samples, 6.12%)</title><rect x="976.3" y="245" width="72.1" height="15.0" fill="rgb(234,122,40)" rx="2" ry="2" />
<text  x="979.27" y="255.5" >[libc-2...</text>
</g>
<g >
<title>[unknown] (321 samples, 0.01%)</title><rect x="901.3" y="197" width="0.1" height="15.0" fill="rgb(214,64,54)" rx="2" ry="2" />
<text  x="904.28" y="207.5" ></text>
</g>
<g >
<title>do_page_fault (965 samples, 0.03%)</title><rect x="958.2" y="213" width="0.3" height="15.0" fill="rgb(237,140,20)" rx="2" ry="2" />
<text  x="961.18" y="223.5" ></text>
</g>
<g >
<title>x86_pmu_enable (313 samples, 0.01%)</title><rect x="364.1" y="69" width="0.1" height="15.0" fill="rgb(251,223,11)" rx="2" ry="2" />
<text  x="367.14" y="79.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1,044 samples, 0.03%)</title><rect x="192.3" y="213" width="0.3" height="15.0" fill="rgb(247,100,52)" rx="2" ry="2" />
<text  x="195.25" y="223.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all (313 samples, 0.01%)</title><rect x="364.1" y="37" width="0.1" height="15.0" fill="rgb(241,224,1)" rx="2" ry="2" />
<text  x="367.14" y="47.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (711 samples, 0.02%)</title><rect x="189.9" y="181" width="0.2" height="15.0" fill="rgb(206,158,50)" rx="2" ry="2" />
<text  x="192.88" y="191.5" ></text>
</g>
<g >
<title>LightGBM::DenseBin&lt;unsigned char, false&gt;::SplitCategorical (43,046 samples, 1.21%)</title><rect x="475.6" y="245" width="14.2" height="15.0" fill="rgb(228,23,7)" rx="2" ry="2" />
<text  x="478.56" y="255.5" ></text>
</g>
<g >
<title>__do_page_fault (1,166 samples, 0.03%)</title><rect x="529.1" y="197" width="0.4" height="15.0" fill="rgb(232,122,6)" rx="2" ry="2" />
<text  x="532.12" y="207.5" ></text>
</g>
<g >
<title>python3.7 (3,570,275 samples, 100.00%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(243,39,36)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >python3.7</text>
</g>
<g >
<title>smp_apic_timer_interrupt (940 samples, 0.03%)</title><rect x="189.8" y="229" width="0.3" height="15.0" fill="rgb(221,229,41)" rx="2" ry="2" />
<text  x="192.83" y="239.5" ></text>
</g>
<g >
<title>change_protection (348 samples, 0.01%)</title><rect x="958.7" y="133" width="0.1" height="15.0" fill="rgb(231,38,32)" rx="2" ry="2" />
<text  x="961.70" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (1,469 samples, 0.04%)</title><rect x="871.2" y="149" width="0.5" height="15.0" fill="rgb(252,36,17)" rx="2" ry="2" />
<text  x="874.19" y="159.5" ></text>
</g>
<g >
<title>update_cfs_shares (318 samples, 0.01%)</title><rect x="871.5" y="69" width="0.1" height="15.0" fill="rgb(234,224,39)" rx="2" ry="2" />
<text  x="874.48" y="79.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (482 samples, 0.01%)</title><rect x="1048.0" y="213" width="0.1" height="15.0" fill="rgb(218,164,29)" rx="2" ry="2" />
<text  x="1050.98" y="223.5" ></text>
</g>
<g >
<title>change_protection (2,118 samples, 0.06%)</title><rect x="875.2" y="133" width="0.7" height="15.0" fill="rgb(231,112,13)" rx="2" ry="2" />
<text  x="878.18" y="143.5" ></text>
</g>
<g >
<title>task_work_run (340 samples, 0.01%)</title><rect x="900.1" y="181" width="0.1" height="15.0" fill="rgb(251,85,45)" rx="2" ry="2" />
<text  x="903.06" y="191.5" ></text>
</g>
<g >
<title>LightGBM::DataPartition::Init (5,164 samples, 0.14%)</title><rect x="18.5" y="261" width="1.7" height="15.0" fill="rgb(226,104,28)" rx="2" ry="2" />
<text  x="21.53" y="271.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (369 samples, 0.01%)</title><rect x="900.1" y="197" width="0.1" height="15.0" fill="rgb(206,0,31)" rx="2" ry="2" />
<text  x="903.06" y="207.5" ></text>
</g>
<g >
<title>LightGBM::DenseBin&lt;unsigned char, true&gt;::SplitCategorical (5,026 samples, 0.14%)</title><rect x="489.8" y="245" width="1.7" height="15.0" fill="rgb(218,189,6)" rx="2" ry="2" />
<text  x="492.79" y="255.5" ></text>
</g>
<g >
<title>__do_page_fault (422 samples, 0.01%)</title><rect x="20.1" y="213" width="0.1" height="15.0" fill="rgb(225,33,44)" rx="2" ry="2" />
<text  x="23.08" y="223.5" ></text>
</g>
<g >
<title>[unknown] (316,548 samples, 8.87%)</title><rect x="1078.4" y="245" width="104.7" height="15.0" fill="rgb(230,61,27)" rx="2" ry="2" />
<text  x="1081.45" y="255.5" >[unknown]</text>
</g>
<g >
<title>handle_mm_fault (515 samples, 0.01%)</title><rect x="489.4" y="181" width="0.1" height="15.0" fill="rgb(225,38,5)" rx="2" ry="2" />
<text  x="492.36" y="191.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (619 samples, 0.02%)</title><rect x="901.6" y="213" width="0.2" height="15.0" fill="rgb(238,199,52)" rx="2" ry="2" />
<text  x="904.62" y="223.5" ></text>
</g>
<g >
<title>[unknown] (586 samples, 0.02%)</title><rect x="957.8" y="229" width="0.2" height="15.0" fill="rgb(252,120,14)" rx="2" ry="2" />
<text  x="960.79" y="239.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (563 samples, 0.02%)</title><rect x="1160.9" y="181" width="0.2" height="15.0" fill="rgb(231,198,45)" rx="2" ry="2" />
<text  x="1163.92" y="191.5" ></text>
</g>
<g >
<title>[unknown] (633 samples, 0.02%)</title><rect x="901.4" y="213" width="0.2" height="15.0" fill="rgb(216,2,3)" rx="2" ry="2" />
<text  x="904.39" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (1,439 samples, 0.04%)</title><rect x="489.2" y="197" width="0.5" height="15.0" fill="rgb(250,176,37)" rx="2" ry="2" />
<text  x="492.18" y="207.5" ></text>
</g>
<g >
<title>change_protection_range (338 samples, 0.01%)</title><rect x="958.7" y="117" width="0.1" height="15.0" fill="rgb(220,180,14)" rx="2" ry="2" />
<text  x="961.70" y="127.5" ></text>
</g>
<g >
<title>update_process_times (433 samples, 0.01%)</title><rect x="363.9" y="133" width="0.2" height="15.0" fill="rgb(221,37,27)" rx="2" ry="2" />
<text  x="366.94" y="143.5" ></text>
</g>
<g >
<title>sys_futex (403 samples, 0.01%)</title><rect x="364.1" y="229" width="0.2" height="15.0" fill="rgb(239,208,48)" rx="2" ry="2" />
<text  x="367.13" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2,111 samples, 0.06%)</title><rect x="1184.5" y="245" width="0.7" height="15.0" fill="rgb(249,28,40)" rx="2" ry="2" />
<text  x="1187.52" y="255.5" ></text>
</g>
<g >
<title>do_page_fault (19,329 samples, 0.54%)</title><rect x="467.8" y="213" width="6.4" height="15.0" fill="rgb(221,21,31)" rx="2" ry="2" />
<text  x="470.76" y="223.5" ></text>
</g>
<g >
<title>update_process_times (615 samples, 0.02%)</title><rect x="189.9" y="133" width="0.2" height="15.0" fill="rgb(225,104,13)" rx="2" ry="2" />
<text  x="192.91" y="143.5" ></text>
</g>
<g >
<title>update_process_times (346 samples, 0.01%)</title><rect x="1160.5" y="101" width="0.1" height="15.0" fill="rgb(222,161,7)" rx="2" ry="2" />
<text  x="1163.50" y="111.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2,132 samples, 0.06%)</title><rect x="871.0" y="229" width="0.7" height="15.0" fill="rgb(232,199,19)" rx="2" ry="2" />
<text  x="874.02" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (19,240 samples, 0.54%)</title><rect x="467.8" y="197" width="6.3" height="15.0" fill="rgb(228,205,20)" rx="2" ry="2" />
<text  x="470.77" y="207.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (90,398 samples, 2.53%)</title><rect x="1048.4" y="245" width="29.9" height="15.0" fill="rgb(230,75,48)" rx="2" ry="2" />
<text  x="1051.45" y="255.5" >[l..</text>
</g>
<g >
<title>[unknown] (313 samples, 0.01%)</title><rect x="528.9" y="229" width="0.1" height="15.0" fill="rgb(213,43,54)" rx="2" ry="2" />
<text  x="531.87" y="239.5" ></text>
</g>
<g >
<title>page_fault (1,013 samples, 0.03%)</title><rect x="958.2" y="229" width="0.3" height="15.0" fill="rgb(216,104,42)" rx="2" ry="2" />
<text  x="961.17" y="239.5" ></text>
</g>
<g >
<title>LightGBM::SerialTreeLearner::FindBestSplitsFromHistograms (575 samples, 0.02%)</title><rect x="900.2" y="245" width="0.2" height="15.0" fill="rgb(222,219,2)" rx="2" ry="2" />
<text  x="903.19" y="255.5" ></text>
</g>
<g >
<title>change_prot_numa (946 samples, 0.03%)</title><rect x="192.3" y="165" width="0.3" height="15.0" fill="rgb(225,47,49)" rx="2" ry="2" />
<text  x="195.28" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1,390 samples, 0.04%)</title><rect x="201.5" y="245" width="0.5" height="15.0" fill="rgb(208,48,28)" rx="2" ry="2" />
<text  x="204.53" y="255.5" ></text>
</g>
<g >
<title>up_read (364 samples, 0.01%)</title><rect x="873.6" y="181" width="0.1" height="15.0" fill="rgb(243,72,13)" rx="2" ry="2" />
<text  x="876.59" y="191.5" ></text>
</g>
<g >
<title>task_numa_work (340 samples, 0.01%)</title><rect x="900.1" y="165" width="0.1" height="15.0" fill="rgb(247,169,26)" rx="2" ry="2" />
<text  x="903.06" y="175.5" ></text>
</g>
<g >
<title>change_protection (546 samples, 0.02%)</title><rect x="364.6" y="149" width="0.2" height="15.0" fill="rgb(223,17,33)" rx="2" ry="2" />
<text  x="367.61" y="159.5" ></text>
</g>
<g >
<title>do_page_fault (4,324 samples, 0.12%)</title><rect x="872.3" y="213" width="1.5" height="15.0" fill="rgb(227,73,17)" rx="2" ry="2" />
<text  x="875.32" y="223.5" ></text>
</g>
<g >
<title>change_prot_numa (546 samples, 0.02%)</title><rect x="364.6" y="165" width="0.2" height="15.0" fill="rgb(244,31,35)" rx="2" ry="2" />
<text  x="367.61" y="175.5" ></text>
</g>
<g >
<title>[unknown] (602 samples, 0.02%)</title><rect x="897.6" y="229" width="0.2" height="15.0" fill="rgb(248,150,0)" rx="2" ry="2" />
<text  x="900.60" y="239.5" ></text>
</g>
<g >
<title>page_fault (427 samples, 0.01%)</title><rect x="20.1" y="245" width="0.1" height="15.0" fill="rgb(218,216,18)" rx="2" ry="2" />
<text  x="23.07" y="255.5" ></text>
</g>
<g >
<title>LightGBM::MultiValSparseBin&lt;unsigned long, unsigned short&gt;::ConstructHistogram (4,707 samples, 0.13%)</title><rect x="1173.8" y="213" width="1.6" height="15.0" fill="rgb(244,136,8)" rx="2" ry="2" />
<text  x="1176.81" y="223.5" ></text>
</g>
<g >
<title>LightGBM::SerialTreeLearner::ComputeBestSplitForFeature (443 samples, 0.01%)</title><rect x="900.7" y="213" width="0.2" height="15.0" fill="rgb(247,118,45)" rx="2" ry="2" />
<text  x="903.71" y="223.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (912 samples, 0.03%)</title><rect x="899.9" y="213" width="0.3" height="15.0" fill="rgb(220,105,3)" rx="2" ry="2" />
<text  x="902.88" y="223.5" ></text>
</g>
<g >
<title>page_fault (3,006 samples, 0.08%)</title><rect x="190.5" y="245" width="1.0" height="15.0" fill="rgb(254,89,39)" rx="2" ry="2" />
<text  x="193.48" y="255.5" ></text>
</g>
<g >
<title>page_fault (5,645 samples, 0.16%)</title><rect x="897.9" y="229" width="1.9" height="15.0" fill="rgb(222,166,43)" rx="2" ry="2" />
<text  x="900.94" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (713 samples, 0.02%)</title><rect x="25.0" y="213" width="0.3" height="15.0" fill="rgb(206,141,27)" rx="2" ry="2" />
<text  x="28.03" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (606 samples, 0.02%)</title><rect x="958.3" y="181" width="0.2" height="15.0" fill="rgb(214,202,4)" rx="2" ry="2" />
<text  x="961.26" y="191.5" ></text>
</g>
<g >
<title>task_work_run (539 samples, 0.02%)</title><rect x="475.4" y="181" width="0.2" height="15.0" fill="rgb(251,200,19)" rx="2" ry="2" />
<text  x="478.38" y="191.5" ></text>
</g>
<g >
<title>change_protection_range (922 samples, 0.03%)</title><rect x="192.3" y="133" width="0.3" height="15.0" fill="rgb(217,110,22)" rx="2" ry="2" />
<text  x="195.29" y="143.5" ></text>
</g>
<g >
<title>down_read_trylock (447 samples, 0.01%)</title><rect x="190.6" y="197" width="0.2" height="15.0" fill="rgb(243,160,45)" rx="2" ry="2" />
<text  x="193.61" y="207.5" ></text>
</g>
<g >
<title>page_cpupid_xchg_last (384 samples, 0.01%)</title><rect x="472.2" y="133" width="0.2" height="15.0" fill="rgb(233,66,15)" rx="2" ry="2" />
<text  x="475.23" y="143.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (367 samples, 0.01%)</title><rect x="364.1" y="181" width="0.2" height="15.0" fill="rgb(223,123,17)" rx="2" ry="2" />
<text  x="367.13" y="191.5" ></text>
</g>
<g >
<title>down_read_trylock (374 samples, 0.01%)</title><rect x="27.3" y="197" width="0.1" height="15.0" fill="rgb(228,166,52)" rx="2" ry="2" />
<text  x="30.32" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,695 samples, 0.08%)</title><rect x="872.7" y="181" width="0.9" height="15.0" fill="rgb(242,124,16)" rx="2" ry="2" />
<text  x="875.67" y="191.5" ></text>
</g>
<g >
<title>task_numa_work (348 samples, 0.01%)</title><rect x="958.7" y="165" width="0.1" height="15.0" fill="rgb(250,49,41)" rx="2" ry="2" />
<text  x="961.70" y="175.5" ></text>
</g>
<g >
<title>[unknown] (4,140 samples, 0.12%)</title><rect x="900.5" y="229" width="1.3" height="15.0" fill="rgb(246,41,7)" rx="2" ry="2" />
<text  x="903.46" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2,800 samples, 0.08%)</title><rect x="898.5" y="165" width="1.0" height="15.0" fill="rgb(213,182,45)" rx="2" ry="2" />
<text  x="901.55" y="175.5" ></text>
</g>
<g >
<title>__do_page_fault (5,582 samples, 0.16%)</title><rect x="898.0" y="197" width="1.8" height="15.0" fill="rgb(241,2,33)" rx="2" ry="2" />
<text  x="900.96" y="207.5" ></text>
</g>
<g >
<title>task_tick_fair (317 samples, 0.01%)</title><rect x="190.0" y="101" width="0.1" height="15.0" fill="rgb(248,165,52)" rx="2" ry="2" />
<text  x="192.99" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_lock (926 samples, 0.03%)</title><rect x="471.8" y="165" width="0.3" height="15.0" fill="rgb(243,181,39)" rx="2" ry="2" />
<text  x="474.84" y="175.5" ></text>
</g>
<g >
<title>__do_page_fault (1,117 samples, 0.03%)</title><rect x="27.3" y="213" width="0.4" height="15.0" fill="rgb(249,203,5)" rx="2" ry="2" />
<text  x="30.30" y="223.5" ></text>
</g>
<g >
<title>schedule (363 samples, 0.01%)</title><rect x="364.1" y="165" width="0.2" height="15.0" fill="rgb(247,186,12)" rx="2" ry="2" />
<text  x="367.14" y="175.5" ></text>
</g>
<g >
<title>do_futex (399 samples, 0.01%)</title><rect x="364.1" y="213" width="0.2" height="15.0" fill="rgb(212,44,40)" rx="2" ry="2" />
<text  x="367.13" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (435 samples, 0.01%)</title><rect x="16.6" y="229" width="0.1" height="15.0" fill="rgb(243,94,40)" rx="2" ry="2" />
<text  x="19.58" y="239.5" ></text>
</g>
<g >
<title>retint_user (3,342 samples, 0.09%)</title><rect x="191.5" y="245" width="1.1" height="15.0" fill="rgb(206,2,1)" rx="2" ry="2" />
<text  x="194.49" y="255.5" ></text>
</g>
<g >
<title>[unknown] (5,017 samples, 0.14%)</title><rect x="1173.8" y="229" width="1.6" height="15.0" fill="rgb(226,37,39)" rx="2" ry="2" />
<text  x="1176.76" y="239.5" ></text>
</g>
<g >
<title>[libm-2.23.so] (63,575 samples, 1.78%)</title><rect x="364.8" y="261" width="21.0" height="15.0" fill="rgb(241,207,43)" rx="2" ry="2" />
<text  x="367.79" y="271.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (442 samples, 0.01%)</title><rect x="1160.5" y="181" width="0.1" height="15.0" fill="rgb(248,23,18)" rx="2" ry="2" />
<text  x="1163.48" y="191.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (758 samples, 0.02%)</title><rect x="958.6" y="213" width="0.2" height="15.0" fill="rgb(207,138,26)" rx="2" ry="2" />
<text  x="961.56" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (509 samples, 0.01%)</title><rect x="1160.5" y="197" width="0.1" height="15.0" fill="rgb(252,14,14)" rx="2" ry="2" />
<text  x="1163.46" y="207.5" ></text>
</g>
<g >
<title>LightGBM::SparseBin&lt;unsigned char&gt;::SplitCategorical (26,286 samples, 0.74%)</title><rect x="1161.2" y="229" width="8.7" height="15.0" fill="rgb(229,106,36)" rx="2" ry="2" />
<text  x="1164.18" y="239.5" ></text>
</g>
<g >
<title>__schedule (363 samples, 0.01%)</title><rect x="364.1" y="149" width="0.2" height="15.0" fill="rgb(231,19,33)" rx="2" ry="2" />
<text  x="367.14" y="159.5" ></text>
</g>
<g >
<title>exp@plt (679 samples, 0.02%)</title><rect x="1188.9" y="261" width="0.2" height="15.0" fill="rgb(241,136,24)" rx="2" ry="2" />
<text  x="1191.92" y="271.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (534 samples, 0.01%)</title><rect x="529.5" y="213" width="0.2" height="15.0" fill="rgb(238,82,42)" rx="2" ry="2" />
<text  x="532.55" y="223.5" ></text>
</g>
<g >
<title>retint_user (1,107 samples, 0.03%)</title><rect x="899.8" y="229" width="0.4" height="15.0" fill="rgb(214,26,24)" rx="2" ry="2" />
<text  x="902.81" y="239.5" ></text>
</g>
<g >
<title>page_fault (446 samples, 0.01%)</title><rect x="16.6" y="245" width="0.1" height="15.0" fill="rgb(222,192,37)" rx="2" ry="2" />
<text  x="19.58" y="255.5" ></text>
</g>
<g >
<title>up_read (3,819 samples, 0.11%)</title><rect x="472.6" y="181" width="1.2" height="15.0" fill="rgb(233,119,12)" rx="2" ry="2" />
<text  x="475.58" y="191.5" ></text>
</g>
<g >
<title>retint_user (6,275 samples, 0.18%)</title><rect x="873.8" y="229" width="2.1" height="15.0" fill="rgb(223,54,46)" rx="2" ry="2" />
<text  x="876.81" y="239.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (480 samples, 0.01%)</title><rect x="467.1" y="197" width="0.2" height="15.0" fill="rgb(217,190,5)" rx="2" ry="2" />
<text  x="470.14" y="207.5" ></text>
</g>
<g >
<title>tick_sched_timer (344 samples, 0.01%)</title><rect x="1048.0" y="149" width="0.1" height="15.0" fill="rgb(213,199,4)" rx="2" ry="2" />
<text  x="1051.01" y="159.5" ></text>
</g>
<g >
<title>retint_user (816 samples, 0.02%)</title><rect x="1048.2" y="229" width="0.2" height="15.0" fill="rgb(246,0,15)" rx="2" ry="2" />
<text  x="1051.18" y="239.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (313 samples, 0.01%)</title><rect x="364.1" y="53" width="0.1" height="15.0" fill="rgb(235,93,11)" rx="2" ry="2" />
<text  x="367.14" y="63.5" ></text>
</g>
<g >
<title>task_numa_work (546 samples, 0.02%)</title><rect x="364.6" y="181" width="0.2" height="15.0" fill="rgb(245,202,25)" rx="2" ry="2" />
<text  x="367.61" y="191.5" ></text>
</g>
<g >
<title>change_prot_numa (348 samples, 0.01%)</title><rect x="958.7" y="149" width="0.1" height="15.0" fill="rgb(217,65,12)" rx="2" ry="2" />
<text  x="961.70" y="159.5" ></text>
</g>
<g >
<title>page_fault (726 samples, 0.02%)</title><rect x="25.0" y="245" width="0.3" height="15.0" fill="rgb(246,29,43)" rx="2" ry="2" />
<text  x="28.02" y="255.5" ></text>
</g>
<g >
<title>page_fault (19,599 samples, 0.55%)</title><rect x="467.7" y="229" width="6.5" height="15.0" fill="rgb(233,66,7)" rx="2" ry="2" />
<text  x="470.68" y="239.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (543 samples, 0.02%)</title><rect x="1160.4" y="213" width="0.2" height="15.0" fill="rgb(228,75,0)" rx="2" ry="2" />
<text  x="1163.45" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (786 samples, 0.02%)</title><rect x="189.9" y="197" width="0.2" height="15.0" fill="rgb(223,111,32)" rx="2" ry="2" />
<text  x="192.88" y="207.5" ></text>
</g>
<g >
<title>page_fault (1,480 samples, 0.04%)</title><rect x="489.2" y="229" width="0.5" height="15.0" fill="rgb(224,31,9)" rx="2" ry="2" />
<text  x="492.17" y="239.5" ></text>
</g>
<g >
<title>perf_event_context_sched_in (313 samples, 0.01%)</title><rect x="364.1" y="101" width="0.1" height="15.0" fill="rgb(220,136,0)" rx="2" ry="2" />
<text  x="367.14" y="111.5" ></text>
</g>
<g >
<title>LightGBM::BinaryLogloss::GetGradients (18,474 samples, 0.52%)</title><rect x="10.7" y="261" width="6.1" height="15.0" fill="rgb(216,127,10)" rx="2" ry="2" />
<text  x="13.73" y="271.5" ></text>
</g>
<g >
<title>__do_page_fault (332 samples, 0.01%)</title><rect x="1160.7" y="181" width="0.1" height="15.0" fill="rgb(253,72,40)" rx="2" ry="2" />
<text  x="1163.68" y="191.5" ></text>
</g>
<g >
<title>should_numa_migrate_memory (469 samples, 0.01%)</title><rect x="472.2" y="149" width="0.2" height="15.0" fill="rgb(231,39,43)" rx="2" ry="2" />
<text  x="475.20" y="159.5" ></text>
</g>
<g >
<title>task_work_run (728 samples, 0.02%)</title><rect x="1048.2" y="181" width="0.2" height="15.0" fill="rgb(214,47,28)" rx="2" ry="2" />
<text  x="1051.21" y="191.5" ></text>
</g>
<g >
<title>LightGBM::MultiValSparseBin&lt;unsigned long, unsigned short&gt;::ConstructHistogram (232,228 samples, 6.50%)</title><rect x="1084.4" y="229" width="76.7" height="15.0" fill="rgb(216,55,6)" rx="2" ry="2" />
<text  x="1087.35" y="239.5" >LightGBM..</text>
</g>
<g >
<title>page_fault (1,136 samples, 0.03%)</title><rect x="27.3" y="245" width="0.4" height="15.0" fill="rgb(213,10,48)" rx="2" ry="2" />
<text  x="30.29" y="255.5" ></text>
</g>
<g >
<title>[unknown] (318 samples, 0.01%)</title><rect x="1160.3" y="213" width="0.1" height="15.0" fill="rgb(232,200,49)" rx="2" ry="2" />
<text  x="1163.34" y="223.5" ></text>
</g>
<g >
<title>[unknown] (2,426,481 samples, 67.96%)</title><rect x="385.9" y="261" width="801.9" height="15.0" fill="rgb(235,217,4)" rx="2" ry="2" />
<text  x="388.85" y="271.5" >[unknown]</text>
</g>
<g >
<title>change_prot_numa (2,118 samples, 0.06%)</title><rect x="875.2" y="149" width="0.7" height="15.0" fill="rgb(244,152,21)" rx="2" ry="2" />
<text  x="878.18" y="159.5" ></text>
</g>
<g >
<title>down_read_trylock (848 samples, 0.02%)</title><rect x="898.0" y="181" width="0.3" height="15.0" fill="rgb(229,198,13)" rx="2" ry="2" />
<text  x="901.01" y="191.5" ></text>
</g>
<g >
<title>down_read_trylock (6,386 samples, 0.18%)</title><rect x="468.2" y="181" width="2.1" height="15.0" fill="rgb(226,92,17)" rx="2" ry="2" />
<text  x="471.18" y="191.5" ></text>
</g>
<g >
<title>page_fault (341 samples, 0.01%)</title><rect x="491.3" y="229" width="0.1" height="15.0" fill="rgb(235,183,33)" rx="2" ry="2" />
<text  x="494.32" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (428 samples, 0.01%)</title><rect x="16.6" y="213" width="0.1" height="15.0" fill="rgb(250,221,31)" rx="2" ry="2" />
<text  x="19.58" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (330 samples, 0.01%)</title><rect x="491.3" y="213" width="0.1" height="15.0" fill="rgb(230,190,52)" rx="2" ry="2" />
<text  x="494.32" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (389 samples, 0.01%)</title><rect x="27.4" y="197" width="0.2" height="15.0" fill="rgb(239,14,43)" rx="2" ry="2" />
<text  x="30.45" y="207.5" ></text>
</g>
<g >
<title>__do_page_fault (325 samples, 0.01%)</title><rect x="491.3" y="197" width="0.1" height="15.0" fill="rgb(243,26,29)" rx="2" ry="2" />
<text  x="494.32" y="207.5" ></text>
</g>
<g >
<title>[unknown] (3,926 samples, 0.11%)</title><rect x="1046.7" y="229" width="1.3" height="15.0" fill="rgb(233,48,12)" rx="2" ry="2" />
<text  x="1049.67" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (335 samples, 0.01%)</title><rect x="364.0" y="117" width="0.1" height="15.0" fill="rgb(236,156,7)" rx="2" ry="2" />
<text  x="366.97" y="127.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (699 samples, 0.02%)</title><rect x="363.9" y="245" width="0.2" height="15.0" fill="rgb(221,146,38)" rx="2" ry="2" />
<text  x="366.87" y="255.5" ></text>
</g>
<g >
<title>LightGBM::DenseBin&lt;unsigned char, false&gt;::Split (1,738 samples, 0.05%)</title><rect x="1078.5" y="229" width="0.5" height="15.0" fill="rgb(225,210,8)" rx="2" ry="2" />
<text  x="1081.45" y="239.5" ></text>
</g>
<g >
<title>exp (3,337 samples, 0.09%)</title><rect x="1187.8" y="261" width="1.1" height="15.0" fill="rgb(237,27,35)" rx="2" ry="2" />
<text  x="1190.82" y="271.5" ></text>
</g>
<g >
<title>task_work_run (512 samples, 0.01%)</title><rect x="1160.9" y="165" width="0.2" height="15.0" fill="rgb(239,59,12)" rx="2" ry="2" />
<text  x="1163.94" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (472 samples, 0.01%)</title><rect x="467.1" y="181" width="0.2" height="15.0" fill="rgb(221,100,18)" rx="2" ry="2" />
<text  x="470.14" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.14 (619 samples, 0.02%)</title><rect x="189.9" y="149" width="0.2" height="15.0" fill="rgb(249,37,14)" rx="2" ry="2" />
<text  x="192.91" y="159.5" ></text>
</g>
<g >
<title>task_work_run (948 samples, 0.03%)</title><rect x="192.3" y="197" width="0.3" height="15.0" fill="rgb(224,58,4)" rx="2" ry="2" />
<text  x="195.28" y="207.5" ></text>
</g>
<g >
<title>mpol_misplaced (401 samples, 0.01%)</title><rect x="873.3" y="165" width="0.1" height="15.0" fill="rgb(233,181,5)" rx="2" ry="2" />
<text  x="876.29" y="175.5" ></text>
</g>
</g>
</svg>
